{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","app.js","index.js"],"names":["Filter","handleSearchOption","onChange","PersonForm","props","onSubmit","addPerson","handleNameChange","value","newName","handleNumberChange","newNumber","type","Persons","phoneBook","handleDeletion","map","person","key","name","number","id","onClick","Notification","notification","notificationStyle","opacity","width","padding","margin","marginLeft","style","error","color","fontSize","backgroundColor","border","message","baseUrl","axios","get","then","res","data","personObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","searchOption","setSearchOption","searchResult","setSearchResult","notificationMessage","setNotificationMessage","useEffect","personService","initialPersons","clear","handleUpdate","window","confirm","returnedPerson","filteredPhonebook","filter","p","concat","setTimeout","catch","e","target","result","toLowerCase","includes","trim","preventDefault","isNaN","alert","length","existingPerson","find","validateNameAndNum","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b38e8d8c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ handleSearchOption }) => {\r\n  return (\r\n    <>\r\n    filter shown with: <input onChange={handleSearchOption}/> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n  return(\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: <input onChange={props.handleNameChange} value={props.newName}/>\r\n      </div>\r\n      <div>\r\n        number: <input onChange={props.handleNumberChange} value={props.newNumber}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\n\r\nconst Persons = ({ phoneBook, handleDeletion }) => {\r\n  return (\r\n    phoneBook.map(person => {\r\n      return (\r\n        <div key={person.name}>\r\n          {person.name} {person.number}\r\n          <button key={person.id} onClick={() => { handleDeletion(person.name, person.id) } }>Delete</button>\r\n        </div>\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n    const notificationStyle = {\r\n        opacity: 0.8,\r\n        width: '50%',\r\n        padding: 5,\r\n        margin: 10,\r\n        marginLeft: 0\r\n    }\r\n    const messageStyle = {\r\n        color: 'grey', \r\n        fontSize: '1.1rem',\r\n        backgroundColor: 'lightblue'\r\n    }\r\n    const errorStyle = {\r\n        color: 'red', \r\n        fontSize: '1.1rem',\r\n        backgroundColor: 'lightgrey',\r\n        border: '2px solid red'\r\n    }\r\n\r\n    if (notification === null) return null\r\n\r\n    return (\r\n        <div style={ notification.error ? \r\n                {...notificationStyle, ...errorStyle} : \r\n                {...notificationStyle, ...messageStyle} \r\n            }>\r\n            {notification.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios\r\n        .get(baseUrl)\r\n        .then(res => res.data)\r\n}\r\nconst create = personObject => {\r\n    return axios\r\n        .post(baseUrl, personObject)\r\n        .then(res => res.data)\r\n}\r\nconst updatePerson = (personObject, id) => {\r\n    return axios\r\n        .put(`${baseUrl}/${id}`, personObject)\r\n        .then(res => res.data)\r\n}\r\nconst deletePerson = id => {\r\n    return axios\r\n        .delete(`${baseUrl}/${id}`)\r\n        .then(res => res.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    updatePerson,\r\n    deletePerson\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ searchOption, setSearchOption ] = useState('')\r\n  const [ searchResult, setSearchResult ] = useState(persons)\r\n  const [notificationMessage, setNotificationMessage ] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => setPersons(initialPersons))\r\n  }, []);\r\n\r\n  // clears name and number inputs\r\n  const validateNameAndNum = (personObject) => {\r\n    // check if name and number are not empty strings or number is in correct form\r\n    if (!newName || !newNumber || isNaN(newNumber)) {\r\n      return alert(`Name or number is not specified or number is in wrong format`)\r\n    }\r\n    // check if there is already a person with the same name\r\n    const exists = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase())\r\n    if (exists.length > 0) {\r\n      const existingPerson = persons.find(person => person.name === personObject.name)\r\n      handleUpdate(personObject, existingPerson.id)\r\n      return\r\n    }\r\n    return true\r\n  }\r\n  const clear = () => {\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n  const addPerson = (e) => {\r\n    e.preventDefault()\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber \r\n    }\r\n    // if name and number are ok, add person to the phonebook\r\n    if (validateNameAndNum(personObject)) { \r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          clear()\r\n          const notification = {\r\n            message: `Added ${personObject.name}`, \r\n            error: false\r\n          }\r\n          setNotificationMessage(notification)\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (e) => {\r\n    setNewName(e.target.value)\r\n  }\r\n  const handleNumberChange = (e) => {\r\n    setNewNumber(e.target.value)\r\n  }\r\n  const handleSearchOption = (e) => {\r\n    setSearchOption(e.target.value)\r\n\r\n    // search in array of persons' names with input value\r\n    const result = persons.filter( \r\n      person => person.name\r\n        .toLowerCase()\r\n        .includes(\r\n          e.target.value\r\n          .toLowerCase()\r\n          .trim()\r\n        )\r\n    );\r\n    setSearchResult(result);\r\n  }\r\n  const handleUpdate = (personObject, id) => {\r\n    if (window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)) {\r\n      personService\r\n        .updatePerson(personObject, id)\r\n        .then(returnedPerson => {\r\n          const filteredPhonebook = persons.filter(p => p.id !== id)\r\n          setPersons(filteredPhonebook.concat(returnedPerson))\r\n          clear()\r\n          const notification = {\r\n            message: `${returnedPerson.name} updated`, \r\n            error: false\r\n          }\r\n          setNotificationMessage(notification)\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          const filteredPhonebook = persons.filter(p => p.id !== id)\r\n          setPersons(filteredPhonebook)\r\n          clear()\r\n          const notification = {\r\n            message: `Information of ${personObject.name} has already been removed from server.`, \r\n            error: true\r\n          }\r\n          setNotificationMessage(notification)\r\n          setTimeout(() => {\r\n            setNotificationMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n  const handleDeletion = (name, id) => {\r\n    if (window.confirm(`Delete ${name} ?`)) {\r\n      personService\r\n        .deletePerson(id)\r\n        .then(() => {\r\n          const filteredPhonebook = persons.filter(p => p.id !== id)\r\n          setPersons(filteredPhonebook)\r\n        })\r\n    }\r\n  }\r\n  // if input field for searching is empty, show all persons\r\n  const phoneBook = searchOption ? searchResult : persons\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notificationMessage}/>\r\n      <Filter handleSearchOption={handleSearchOption} />\r\n      <h2>add a new</h2>\r\n      <PersonForm \r\n        addPerson={addPerson} \r\n        handleNameChange={handleNameChange} \r\n        handleNumberChange={handleNumberChange} \r\n        newName={newName} \r\n        newNumber={newNumber} \r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons phoneBook={phoneBook} handleDeletion={handleDeletion}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}